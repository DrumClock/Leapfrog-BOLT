
### printer.cfg 

###  Z-max endstop
[gcode_button z_max]  ## -- don't change name! --   
pin:  ^PC0   ## Z-STOP         
press_gcode:  


###############################################
# CARRIAGE WITH PROBE - IDEX HOMING SEQUENCE   
###############################################

[homing_override]
axes: z
set_position_z: 0
gcode:
  
   {% set user_vars = printer["gcode_macro VARIABLE"] %} 
  
   ##### get user defines position endstop Z or probe #####   
   {% set z_endstop_x = (printer.configfile.config['stepper_x'].position_max)|int / 2 %}
   {% set z_endstop_y = (printer.configfile.config['stepper_y'].position_max)|int / 2 %}
   {% set z_hop = 5 %}
   {% set max_z_velocity = printer.configfile.config['printer'].max_z_velocity %} 
   #{% set act_speed = printer.gcode_move.speed %}   

        
     {% if 'gcode_button z_max' in printer and printer['gcode_button z_max'].state == 'PRESSED' %}  # RELEASED / PRESSED
       ### no Z-hop befor homing - Z-max endstop activated
     {% else %}  
       ### Z-hop befor homing - lift nozzle
       G91; set relative
       G0 Z{z_hop} F100 
       G90; set absolute
    {% endif %}

      ### restore speed
      #G1 F{act_speed}   
       G1 F30000
       
     
     {% if "x" not in printer.toolhead.homed_axes %}
       RESPOND MSG="Homing X"
       G28 X0 
     {% endif %} 
       
#-------------------------------------------------------------------------------------------------
    
     {%  if 'gcode_macro M605' in printer %} 
        ### Auto-park mode S1 (default mode)
         {% set _dummy =user_vars.idex_mode.update( {'active' : 1, 'carriage_offset' : 0} ) %}  
         {% set _dummy =user_vars.dual_carriage.update( {'auto_exchange':True} ) %}  
     
        ### reset variable after disable carriage in S2,S3 mode
         {% set _dummy = user_vars.tool_change.update( {'enable' : True } ) %}  
         SET_GCODE_VARIABLE  MACRO=VARIABLE  VARIABLE=tool_change  VALUE="{user_vars.tool_change}"  

        ### reset offset_temp
         {% set tool_0   =   user_vars.toolhead[0][0]   %}    # carriage 0 / tool 0  e.g. 'extruder' 
         {% set tool_1   =   user_vars.toolhead[1][0]   %}    # carriage 1 / tool 0  e.g. 'extruder2'         
         {% set _dummy = user_vars.offset_temp.update({tool_0: 0.0, tool_1: 0.0}) %}                         
         {% if user_vars.tool|length == 4  %}
           ### offset temp for 4 extruder (4EX2 printer)
           {%  set tool_2   =   user_vars.toolhead[0][1]   %}    # carriage 0 / tool 1  e.g. 'extruder1 
           {%  set tool_3   =   user_vars.toolhead[1][1]   %}    # carriage 1 / tool 1  e.g. 'extruder3'  
           {% set _dummy = user_vars.offset_temp.update({tool_2: 0.0, tool_3: 0.0}) %}          
         {% endif %} 

        ### update  variable
         SET_GCODE_VARIABLE  MACRO=VARIABLE  VARIABLE=idex_mode      VALUE="{user_vars.idex_mode}"  
         SET_GCODE_VARIABLE  MACRO=VARIABLE  VARIABLE=dual_carriage  VALUE="{user_vars.dual_carriage}"  
         SET_GCODE_VARIABLE  MACRO=VARIABLE  VARIABLE=offset_temp    VALUE="{user_vars.offset_temp}"   

        ### Reset all extruder to default 
         DEFAULT_EXTRUDER_SETTINGS       
     {% endif %}       

#-------------------------------------------------------------------------------------------------
         
     {% if "y" not in printer.toolhead.homed_axes %}  
       RESPOND MSG="Homing Y"
       G28 Y0      
     {% endif %}
     

     {% if 'dual_carriage' in printer['motion_report'].steppers %}    
       {% set axis = printer.configfile.settings.dual_carriage.axis %}     
       {% set endstop_open = (printer.configfile.config['dual_carriage'].position_endstop)|int -2 %}

        RESPOND MSG="Open endstop for dual carriage"
       
       #### 'endstop_open' = gap (in mm) between toolhead and endstop when parking (mm)
       SET_DUAL_CARRIAGE CARRIAGE=1
        G1 {axis + endstop_open|string}  
       
       ### set extruder and carrriage with Z-probe 
       SET_DUAL_CARRIAGE CARRIAGE=0

       {%  if printer.toolhead.extruder != 'extruder' %} 
          ACTIVATE_EXTRUDER EXTRUDER=extruder 
       {% endif %} 
  
     {% endif %} 
     
     
       RESPOND MSG="Probe Homing Z"
       ## XY Location of the Z probe
       G0 X{z_endstop_x} Y{z_endstop_y} F7200   
       ## HOME Z
       G28 Z0   
       ## Elevator Z
       G0 Z{z_hop*2} F{max_z_velocity * 60 } 
       G1 F30000  
          
    ### restore speed
    #G1 F{act_speed}    
     G1 F3000
       
     
    
