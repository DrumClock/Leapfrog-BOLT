######################################################################################
# This file contains a configuration snippet for IDEX_SHAPER_CALIBRATE.
#
#
# Define HW configuration in printer.cfg
# 

#[input_shaper]
# Intentionally empty


#####################################################################
#  Variable for this configurations
#  ATTENTION: 
#  KLIPPER merges all [gcode_macro VARIABLE] into one configuration file.
#  If the variable name already exists it will be overwritten!
#####################################################################

[gcode_macro VARIABLE]
gcode:

variable_input_shaper_idex:  { }

  # example: {'0': {'shaper_type_x': 'ei', 'shaper_freq_x': '29.0', 'shaper_type_y': 'mzv', 'shaper_freq_y': '28.4'}},
  #           '1': {'shaper_type_x': 'ei', 'shaper_freq_x': '29.0', 'shaper_type_y': 'zv', 'shaper_freq_y': '27.6'}}
  #          }
                                    
#############################################################
# Creating a list of variables from the printer configuration
# using [gcode_macro RUN_MACRO_INIT] which will run
# in [delayed_gcode _INIT] after restarting FW Klipper.
#
# This macro finds all defined _INIT_* macros and runs them.
# The start order can be defined by names: _A_INIT_* , _B_INIT_* etc.
#############################################################

[gcode_macro _INIT_INPUT_SHAPER_IDEX]
gcode:

   {% set user_vars = printer["gcode_macro VARIABLE"] %} 
   
  ### carriage 0
 #   {% set primary_carriage_shaper = user_vars.input_shaper_idex.0.type %} 
 #   {% set primary_carriage_freq = user_vars.input_shaper_idex.0.freq %} 
  ### carriage 1
 #   {% set dual_carriage_shaper = user_vars.input_shaper_idex.1.type %} 
 #   {% set dual_carriage_freq =  user_vars.input_shaper_idex.1.freq %} 
  ### axis Y
 #   {% set y_shaper = user_vars.input_shaper_idex.y.type %} 
 #   {% set y_freq = user_vars.input_shaper_idex.y.freq %} 
  
#  SET_DUAL_CARRIAGE CARRIAGE=1
#  SET_INPUT_SHAPER SHAPER_TYPE_X=<dual_carriage_shaper> SHAPER_FREQ_X=<dual_carriage_freq> SHAPER_TYPE_Y=<y_shaper> SHAPER_FREQ_Y=<y_freq>
  
#  SET_DUAL_CARRIAGE CARRIAGE=0
#  SET_INPUT_SHAPER SHAPER_TYPE_X=<primary_carriage_shaper> SHAPER_FREQ_X=<primary_carriage_freq> SHAPER_TYPE_Y=<y_shaper> SHAPER_FREQ_Y=<y_freq>
  
  {action_respond_info("Settings IDEX input shaper.") if printer.save_variables.variables.dump_list }
    
######################################################################
# IDEX_SHAPER_CALIBRATE  - MANAGEMENT
# Function description: 
#
#####################################################################

[gcode_macro IDEX_SHAPER_CALIBRATE]
gcode: 
  {% set user_vars = printer["gcode_macro VARIABLE"] %} 
  {% set name = "input_shaper_idex" %}    #  name variable 
  {% set init = user_vars[name] %}     # default preset   
       
 
  G28
  ACTIVATE_CARRIAGE EXTRUDER=extruder
  SHAPER_CALIBRATE CHIPS=extruder FREQ_START=20 FREQ_END=30
  SAVE_SHAPER_CALIBRATE CARRIAGE=0  

     
  ACTIVATE_CARRIAGE EXTRUDER=extruder1
  SHAPER_CALIBRATE CHIPS=extruder1 FREQ_START=20 FREQ_END=30
  SAVE_SHAPER_CALIBRATE CARRIAGE=1  

  SAVE_USER_VARIABLE VAR={name}

######################################################################

[gcode_macro  SAVE_SHAPER_CALIBRATE]
gcode:  

  {% set user_vars = printer["gcode_macro VARIABLE"] %} 
  {% set name = "input_shaper_idex" %}    #  name variable 
  {% set init = user_vars[name] %}     # default preset  
  
  {% set carriage = params.CARRIAGE|default(0) %}
  
  {% set _dummy = init.update( { carriage : printer.configfile.save_config_pending_items.input_shaper } ) %}
     
     
  ### save variable 
  SET_GCODE_VARIABLE MACRO=VARIABLE VARIABLE={name} VALUE="{init}"  


######################################################################

 
[gcode_macro GET_SAVE_CONFIG]
gcode:  
  {action_respond_info("save_config = %s" % printer.configfile.save_config_pending_items)}  
  
  
#######################################################################
  
  
  
